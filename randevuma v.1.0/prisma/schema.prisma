// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL") // Pooler (6543) - runtime
  directUrl = env("DIRECT_URL")   // Direct  (5432) - migrate/seed
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  password  String
  role      String   @default("user") // user, admin
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  businesses Business[]
}

model Business {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  description String?
  address     String?
  phone       String?
  email       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  services      Service[]
  staff         Staff[]
  appointments  Appointment[]
  workingHours  WorkingHours[]

  @@index([slug])
  @@index([userId])
}

model Service {
  id          String   @id @default(cuid())
  name        String
  description String?
  duration    Int // dakika cinsinden
  price       Float
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  businessId String
  business   Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  appointments Appointment[]

  @@index([businessId])
}

model Staff {
  id        String   @id @default(cuid())
  name      String
  email     String?
  phone     String?
  title     String? // ör: "Kuaför", "Berber"
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  businessId String
  business   Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  workingHours WorkingHours[]
  appointments Appointment[]

  @@index([businessId])
}

model WorkingHours {
  id        String   @id @default(cuid())
  dayOfWeek Int // 0-6 (Pazar-Cumartesi)
  startTime String // "09:00" formatında
  endTime   String // "18:00" formatında
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  businessId String
  business   Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  staffId String
  staff   Staff  @relation(fields: [staffId], references: [id], onDelete: Cascade)

  @@index([businessId])
  @@index([staffId])
}

model Appointment {
  id             String   @id @default(cuid())
  customerName   String
  customerPhone  String
  customerEmail  String?
  date           DateTime // Randevu tarihi ve saati
  status         String   @default("pending") // pending, confirmed, cancelled, completed
  notes          String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  businessId String
  business   Business @relation(fields: [businessId], references: [id], onDelete: Cascade)

  serviceId String
  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  staffId String
  staff   Staff  @relation(fields: [staffId], references: [id], onDelete: Cascade)

  @@index([businessId])
  @@index([serviceId])
  @@index([staffId])
  @@index([date])
}

model Booking {
  id        String   @id @default(cuid())
  name      String
  email     String?
  phone     String?
  note      String?
  startsAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}